// Test definitions. Do NOT edit this file!
#define CATCH_CONFIG_MAIN // defines main() automatically
#include <iostream>
#include <string>
#include <vector>
#include "catch.hpp"
#include "main.hpp"
// tests for exercise 1

// Function prototype
int countSymmetricPairs(const std::vector<int>& array, int start, int end);

TEST_CASE("countSymmetricPairs function", "[symmetric_pairs]") {
    SECTION("All elements same") {
        std::vector<int> arr(10, 5);  // All elements are 5
        REQUIRE(countSymmetricPairs(arr, 0, 9) == 5);
    }

    SECTION("No symmetric pairs") {
        std::vector<int> arr = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
        REQUIRE(countSymmetricPairs(arr, 0, 9) == 0);
    }

    SECTION("Some symmetric pairs") {
        std::vector<int> arr = {1, 2, 3, 4, 5, 5, 4, 3, 2, 1};
        REQUIRE(countSymmetricPairs(arr, 0, 9) == 5);
    }

    SECTION("Mixed symmetric pairs") {
        std::vector<int> arr = {1, 2, 3, 4, 5, 6, 4, 3, 2, 1};
        REQUIRE(countSymmetricPairs(arr, 0, 9) == 4);
    }

    SECTION("Empty array") {
        std::vector<int> arr;
        REQUIRE(countSymmetricPairs(arr, 0, -1) == 0);
    }

    SECTION("Single element array") {
        std::vector<int> arr = {5};
        REQUIRE(countSymmetricPairs(arr, 0, 0) == 0);
    }

    SECTION("Two element array - symmetric") {
        std::vector<int> arr = {3, 3};
        REQUIRE(countSymmetricPairs(arr, 0, 1) == 1);
    }

    SECTION("Two element array - not symmetric") {
        std::vector<int> arr = {3, 4};
        REQUIRE(countSymmetricPairs(arr, 0, 1) == 0);
    }

    SECTION("Random array test") {
        std::vector<int> arr(10);
        for (int i = 0; i < 10; ++i) {
            arr[i] = rand() % 10;  // Random numbers between 0 and 9
        }
        int expected = 0;
        for (int i = 0; i < 5; ++i) {
            if (arr[i] == arr[9-i]) {
                expected++;
            }
        }
        REQUIRE(countSymmetricPairs(arr, 0, 9) == expected);
    }
}